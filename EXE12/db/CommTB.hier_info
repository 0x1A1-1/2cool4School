|CommTB
PB => PB.IN1
RST_n => RST_n.IN1
clk => clk.IN5
LED[0] <= UART_wrapper:iUART.cmd
LED[1] <= UART_wrapper:iUART.cmd
LED[2] <= UART_wrapper:iUART.cmd
LED[3] <= UART_wrapper:iUART.cmd
LED[4] <= UART_wrapper:iUART.cmd
LED[5] <= UART_wrapper:iUART.cmd
LED[6] <= UART_wrapper:iUART.cmd
LED[7] <= UART_wrapper:iUART.cmd


|CommTB|CommMaster:iCM
clk => clk.IN1
rst_n => rst_n.IN1
cmd_cmplt <= Selector5.DB_MAX_OUTPUT_PORT_TYPE
TX <= UART_tx:iDUT_tx.TX
snd_cmd => Selector0.IN2
snd_cmd => Selector1.IN1
snd_cmd => Selector2.IN2
snd_cmd => Selector0.IN3
snd_cmd => Selector1.IN2
snd_cmd => Selector2.IN3
snd_cmd => Selector5.IN1
snd_cmd => Selector4.IN1
snd_cmd => next_state.IDLE.DATAB
snd_cmd => ff_low_bit[0].ENA
snd_cmd => ff_low_bit[1].ENA
snd_cmd => ff_low_bit[2].ENA
snd_cmd => ff_low_bit[3].ENA
snd_cmd => ff_low_bit[4].ENA
snd_cmd => ff_low_bit[5].ENA
snd_cmd => ff_low_bit[6].ENA
snd_cmd => ff_low_bit[7].ENA
cmd[0] => ff_low_bit[0].DATAIN
cmd[1] => ff_low_bit[1].DATAIN
cmd[2] => ff_low_bit[2].DATAIN
cmd[3] => ff_low_bit[3].DATAIN
cmd[4] => ff_low_bit[4].DATAIN
cmd[5] => ff_low_bit[5].DATAIN
cmd[6] => ff_low_bit[6].DATAIN
cmd[7] => ff_low_bit[7].DATAIN
cmd[8] => tx_data.DATAB
cmd[9] => tx_data.DATAB
cmd[10] => tx_data.DATAB
cmd[11] => tx_data.DATAB
cmd[12] => tx_data.DATAB
cmd[13] => tx_data.DATAB
cmd[14] => tx_data.DATAB
cmd[15] => tx_data.DATAB


|CommTB|CommMaster:iCM|UART_tx:iDUT_tx
clk => tx_done~reg0.CLK
clk => tx_shift_reg[0].CLK
clk => tx_shift_reg[1].CLK
clk => tx_shift_reg[2].CLK
clk => tx_shift_reg[3].CLK
clk => tx_shift_reg[4].CLK
clk => tx_shift_reg[5].CLK
clk => tx_shift_reg[6].CLK
clk => tx_shift_reg[7].CLK
clk => tx_shift_reg[8].CLK
clk => tx_shift_reg[9].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => state~1.DATAIN
rst_n => tx_shift_reg[0].PRESET
rst_n => tx_shift_reg[1].ACLR
rst_n => tx_shift_reg[2].ACLR
rst_n => tx_shift_reg[3].ACLR
rst_n => tx_shift_reg[4].ACLR
rst_n => tx_shift_reg[5].ACLR
rst_n => tx_shift_reg[6].ACLR
rst_n => tx_shift_reg[7].ACLR
rst_n => tx_shift_reg[8].ACLR
rst_n => tx_shift_reg[9].ACLR
rst_n => tx_done~reg0.ACLR
rst_n => state~3.DATAIN
TX <= tx_shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
trmt => Selector1.IN2
trmt => clr_done.DATAB
trmt => Selector2.IN2
trmt => load.DATAB
trmt => Selector0.IN1
TX_DATA[0] => tx_shift_reg.DATAB
TX_DATA[1] => tx_shift_reg.DATAB
TX_DATA[2] => tx_shift_reg.DATAB
TX_DATA[3] => tx_shift_reg.DATAB
TX_DATA[4] => tx_shift_reg.DATAB
TX_DATA[5] => tx_shift_reg.DATAB
TX_DATA[6] => tx_shift_reg.DATAB
TX_DATA[7] => tx_shift_reg.DATAB
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CommTB|UART_wrapper:iUART
clk => clk.IN1
rst_n => rst_n.IN1
clr_cmd_rdy => Selector1.IN2
clr_cmd_rdy => Selector4.IN1
clr_cmd_rdy => Selector3.IN1
cmd_rdy <= Selector4.DB_MAX_OUTPUT_PORT_TYPE
TX <= UART:iDUT_UART.TX
RX => RX.IN1
cmd[0] <= UART:iDUT_UART.rx_data
cmd[1] <= UART:iDUT_UART.rx_data
cmd[2] <= UART:iDUT_UART.rx_data
cmd[3] <= UART:iDUT_UART.rx_data
cmd[4] <= UART:iDUT_UART.rx_data
cmd[5] <= UART:iDUT_UART.rx_data
cmd[6] <= UART:iDUT_UART.rx_data
cmd[7] <= UART:iDUT_UART.rx_data
cmd[8] <= cmd[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd[9] <= cmd[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd[10] <= cmd[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd[11] <= cmd[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd[12] <= cmd[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd[13] <= cmd[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd[14] <= cmd[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd[15] <= cmd[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
send_resp => send_resp.IN1
resp => resp.IN1
resp_sent <= UART:iDUT_UART.tx_done


|CommTB|UART_wrapper:iUART|UART:iDUT_UART
clk => clk.IN2
rst_n => rst_n.IN2
RX => RX.IN1
TX <= UART_tx:iDUT_tx.TX
rx_data[0] <= UART_rx:iDUT_rx.rx_data
rx_data[1] <= UART_rx:iDUT_rx.rx_data
rx_data[2] <= UART_rx:iDUT_rx.rx_data
rx_data[3] <= UART_rx:iDUT_rx.rx_data
rx_data[4] <= UART_rx:iDUT_rx.rx_data
rx_data[5] <= UART_rx:iDUT_rx.rx_data
rx_data[6] <= UART_rx:iDUT_rx.rx_data
rx_data[7] <= UART_rx:iDUT_rx.rx_data
tx_data[0] => tx_data[0].IN1
tx_data[1] => tx_data[1].IN1
tx_data[2] => tx_data[2].IN1
tx_data[3] => tx_data[3].IN1
tx_data[4] => tx_data[4].IN1
tx_data[5] => tx_data[5].IN1
tx_data[6] => tx_data[6].IN1
tx_data[7] => tx_data[7].IN1
tx_done <= UART_tx:iDUT_tx.tx_done
trmt => trmt.IN1
clr_rdy => clr_rdy.IN1
rdy <= UART_rx:iDUT_rx.rdy


|CommTB|UART_wrapper:iUART|UART:iDUT_UART|UART_tx:iDUT_tx
clk => tx_done~reg0.CLK
clk => tx_shift_reg[0].CLK
clk => tx_shift_reg[1].CLK
clk => tx_shift_reg[2].CLK
clk => tx_shift_reg[3].CLK
clk => tx_shift_reg[4].CLK
clk => tx_shift_reg[5].CLK
clk => tx_shift_reg[6].CLK
clk => tx_shift_reg[7].CLK
clk => tx_shift_reg[8].CLK
clk => tx_shift_reg[9].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => bit_cnt[3].CLK
clk => state~1.DATAIN
rst_n => tx_shift_reg[0].PRESET
rst_n => tx_shift_reg[1].ACLR
rst_n => tx_shift_reg[2].ACLR
rst_n => tx_shift_reg[3].ACLR
rst_n => tx_shift_reg[4].ACLR
rst_n => tx_shift_reg[5].ACLR
rst_n => tx_shift_reg[6].ACLR
rst_n => tx_shift_reg[7].ACLR
rst_n => tx_shift_reg[8].ACLR
rst_n => tx_shift_reg[9].ACLR
rst_n => tx_done~reg0.ACLR
rst_n => state~3.DATAIN
TX <= tx_shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
trmt => Selector1.IN2
trmt => clr_done.DATAB
trmt => Selector2.IN2
trmt => load.DATAB
trmt => Selector0.IN1
TX_DATA[0] => tx_shift_reg.DATAB
TX_DATA[1] => tx_shift_reg.DATAB
TX_DATA[2] => tx_shift_reg.DATAB
TX_DATA[3] => tx_shift_reg.DATAB
TX_DATA[4] => tx_shift_reg.DATAB
TX_DATA[5] => tx_shift_reg.DATAB
TX_DATA[6] => tx_shift_reg.DATAB
TX_DATA[7] => tx_shift_reg.DATAB
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CommTB|UART_wrapper:iUART|UART:iDUT_UART|UART_rx:iDUT_rx
clk => state.CLK
clk => rx_ff2.CLK
clk => rx_ff1.CLK
clk => rdy~reg0.CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => baud_cnt[0].CLK
clk => baud_cnt[1].CLK
clk => baud_cnt[2].CLK
clk => baud_cnt[3].CLK
clk => baud_cnt[4].CLK
clk => baud_cnt[5].CLK
clk => baud_cnt[6].CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
rst_n => baud_cnt[0].ACLR
rst_n => baud_cnt[1].PRESET
rst_n => baud_cnt[2].ACLR
rst_n => baud_cnt[3].PRESET
rst_n => baud_cnt[4].ACLR
rst_n => baud_cnt[5].ACLR
rst_n => baud_cnt[6].PRESET
rst_n => bit_counter[0].ACLR
rst_n => bit_counter[1].ACLR
rst_n => bit_counter[2].ACLR
rst_n => bit_counter[3].ACLR
rst_n => rdy~reg0.ACLR
rst_n => rx_ff2.PRESET
rst_n => rx_ff1.PRESET
rst_n => state.ACLR
RX => rx_ff1.DATAIN
RX => shift_reg[8].DATAIN
rdy <= rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= shift_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= shift_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= shift_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= shift_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= shift_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= shift_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= shift_reg[7].DB_MAX_OUTPUT_PORT_TYPE
clr_rdy => always3.IN1


|CommTB|PE_detect:iPE
clk => ff3.CLK
clk => ff2.CLK
clk => ff1.CLK
rst_n => ff3.ACLR
rst_n => ff2.ACLR
rst_n => ff1.ACLR
PB => ff1.DATAIN
PB_rise <= PB_rise.DB_MAX_OUTPUT_PORT_TYPE


|CommTB|bit_counter_16:iCount
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
clk => count[8]~reg0.CLK
clk => count[9]~reg0.CLK
clk => count[10]~reg0.CLK
clk => count[11]~reg0.CLK
clk => count[12]~reg0.CLK
clk => count[13]~reg0.CLK
clk => count[14]~reg0.CLK
clk => count[15]~reg0.CLK
rst_n => count[0]~reg0.ACLR
rst_n => count[1]~reg0.ACLR
rst_n => count[2]~reg0.ACLR
rst_n => count[3]~reg0.ACLR
rst_n => count[4]~reg0.ACLR
rst_n => count[5]~reg0.ACLR
rst_n => count[6]~reg0.ACLR
rst_n => count[7]~reg0.ACLR
rst_n => count[8]~reg0.ACLR
rst_n => count[9]~reg0.ACLR
rst_n => count[10]~reg0.ACLR
rst_n => count[11]~reg0.ACLR
rst_n => count[12]~reg0.ACLR
rst_n => count[13]~reg0.ACLR
rst_n => count[14]~reg0.ACLR
rst_n => count[15]~reg0.ACLR
EN => count[0]~reg0.ENA
EN => count[15]~reg0.ENA
EN => count[14]~reg0.ENA
EN => count[13]~reg0.ENA
EN => count[12]~reg0.ENA
EN => count[11]~reg0.ENA
EN => count[10]~reg0.ENA
EN => count[9]~reg0.ENA
EN => count[8]~reg0.ENA
EN => count[7]~reg0.ENA
EN => count[6]~reg0.ENA
EN => count[5]~reg0.ENA
EN => count[4]~reg0.ENA
EN => count[3]~reg0.ENA
EN => count[2]~reg0.ENA
EN => count[1]~reg0.ENA
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[8] <= count[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[9] <= count[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[10] <= count[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[11] <= count[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[12] <= count[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[13] <= count[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[14] <= count[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[15] <= count[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|CommTB|rst_synch:iRst
clk => rst_n~reg0.CLK
clk => q1.CLK
RST_n => rst_n~reg0.ACLR
RST_n => q1.ACLR
rst_n <= rst_n~reg0.DB_MAX_OUTPUT_PORT_TYPE


